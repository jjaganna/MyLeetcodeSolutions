{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c93333;}
\margl1440\margr1440\vieww16880\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Problem #146:   LRU Cache\
\
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/lru-cache/"}}{\fldrslt 
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 \strokec2 https://leetcode.com/problems/lru-cache/}}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
from collections import OrderedDict\
\
class LRUCache:\
\
    def __init__(self, capacity: int):\
        self.capacity = capacity\
        self.cache = OrderedDict()\
\
    def get(self, key: int) -> int:\
        if key not in self.cache.keys():\
            return(-1)\
        #else:\
        value = self.cache[key]   # get the value of the key\
        self.cache.pop(key)       # remove the entry from the cache\
        self.cache[key] = value   # append the key and value to the cache so that it goes at the end\
        return(value)\
        \
\
    def put(self, key: int, value: int) -> None:\
        if key in self.cache:    # if key is already in the cache we need to update its value\
            self.cache.pop(key)  # we remove the entry for the key in the cache\
        else:   \
            if len(self.cache) >= self.capacity:  # length of cache is exceeding capacity\
                self.cache.popitem(last = False)  # Remove the first entry from the cache\
            \
        self.cache[key] = value # Add the new item to the cache after making space if needed\
\
\
# Your LRUCache object will be instantiated and called as such:\
# obj = LRUCache(capacity)\
# param_1 = obj.get(key)\
# obj.put(key,value)}