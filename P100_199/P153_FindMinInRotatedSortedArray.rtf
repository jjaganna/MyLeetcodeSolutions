{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf600
{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c93333;}
\margl1440\margr1440\vieww14520\viewh12800\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Problem 163:  Find Minimum in Rotated Sorted Array\
\
\pard\pardeftab720\sl280\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/"}}{\fldrslt 
\f1 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 \outl0\strokewidth0 \strokec2 https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/}}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
class Solution:\
    def findMin(self, nums: List[int]) -> int:\
        n = len(nums)\
        if n == 0:\
            return(nums)\
        elif n == 1:\
            return(nums[0])\
        \
        \
        low = 0\
        high = n - 1\
        if nums[low] < nums[high]:\
            return(nums[low])\
        while (low < high):\
            middle = (low + high)//2\
            if nums[middle] >  nums[middle + 1]:\
                return(nums[middle + 1])\
            elif nums[middle] < nums[middle - 1]:\
                return(nums[middle])\
            else:\
                if nums[middle] > nums[low]:\
                    low = middle\
                else:\
                    high = middle\
                \
        return(nums[low])}